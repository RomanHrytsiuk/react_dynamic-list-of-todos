{"version":3,"sources":["types/SelectedOption.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["SelectedOption","TodoList","todos","setSelectedTodo","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","filter","setFilter","query","setQuery","value","onChange","event","target","all","active","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","selectedTodo","useState","user","setUser","areLoadingUsers","setAreLoadingUsers","useEffect","userId","finally","href","email","name","App","setTodos","areLoadingTodos","setAreLoadingTodos","visibleTodos","preparedTodos","trim","toLowerCase","includes","getVisibleTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.995b1d2c.chunk.js","sourcesContent":["export enum SelectedOption {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  setSelectedTodo: (todo: Todo | null) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setSelectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n          <td className=\"is-vcentered\">{todo.id}</td>\n          {todo.completed ? (\n            <td className=\"is-vcentered\">\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </td>\n          ) : (\n            <td className=\"is-vcentered\" />\n          )}\n          <td className=\"is-vcentered is-expanded\">\n            <p className={classNames(\n              todo.completed ? 'has-text-success' : 'has-text-danger',\n            )}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => setSelectedTodo(todo)}\n            >\n              <span className=\"icon\">\n                <i className=\"far fa-eye\" />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import { SelectedOption } from '../../types/SelectedOption';\n\ntype Props = {\n  filter: SelectedOption;\n  setFilter: (item: SelectedOption) => void;\n  query: string;\n  setQuery: (query: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filter,\n  setFilter,\n  query,\n  setQuery,\n}) => {\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setFilter(event.target.value as SelectedOption);\n  };\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={handleSelect}\n          >\n            <option value={SelectedOption.all}>All</option>\n            <option value={SelectedOption.active}>Active</option>\n            <option value={SelectedOption.completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQueryChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              aria-label=\"label\"\n              onClick={() => setQuery('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  selectedTodo: Todo;\n  setSelectedTodo: (todo: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [areLoadingUsers, setAreLoadingUsers] = useState(false);\n\n  useEffect(() => {\n    setAreLoadingUsers(true);\n    getUser(selectedTodo.userId)\n      .then(setUser)\n      .finally(() => setAreLoadingUsers(false));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {areLoadingUsers ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              aria-label=\"label\"\n              onClick={() => setSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { SelectedOption } from './types/SelectedOption';\n\nexport const App: React.FC = () => {\n  const [filter, setFilter] = useState(SelectedOption.all);\n  const [query, setQuery] = useState('');\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [areLoadingTodos, setAreLoadingTodos] = useState(false);\n\n  useEffect(() => {\n    setAreLoadingTodos(true);\n    getTodos()\n      .then(setTodos)\n      .finally(() => setAreLoadingTodos(false));\n  }, []);\n\n  const getVisibleTodos = () => {\n    let preparedTodos = [...todos];\n\n    if (query.trim()) {\n      preparedTodos = preparedTodos.filter(\n        todo => todo.title.toLowerCase().includes(query.toLowerCase()),\n      );\n    }\n\n    switch (filter) {\n      case SelectedOption.active:\n        return preparedTodos.filter(todo => !todo.completed);\n      case SelectedOption.completed:\n        return preparedTodos.filter(todo => todo.completed);\n      default:\n        return preparedTodos;\n    }\n  };\n\n  const visibleTodos = getVisibleTodos();\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filter={filter}\n                setFilter={setFilter}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {areLoadingTodos && (\n                <Loader />\n              )}\n              <TodoList\n                todos={visibleTodos}\n                setSelectedTodo={setSelectedTodo}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}